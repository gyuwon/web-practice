@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Jasmine Spec Runner";
}

@section styles {
    <link rel="shortcut icon" type="image/png" href="/Content/jasmine/jasmine_favicon.png">
    <link rel="stylesheet" type="text/css" href="/Content/jasmine/jasmine.css">
}

@section scripts {
    <script type="text/javascript" src="/Scripts/jasmine/jasmine.js"></script>
    <script type="text/javascript" src="/Scripts/jasmine/jasmine-html.js"></script>

    @Scripts.Render("~/Scripts/angular.js")

    <!-- include source files here... -->
    <script type="text/javascript" src="/Scripts/jasmine-samples/SpecHelper.js"></script>
    <script type="text/javascript" src="/Scripts/jasmine-samples/PlayerSpec.js"></script>
    @Scripts.Render("~/Scripts/Angular/Step02.js")

    <!-- include spec files here... -->
    <script type="text/javascript" src="/Scripts/jasmine-samples/Player.js"></script>
    <script type="text/javascript" src="/Scripts/jasmine-samples/Song.js"></script>
    @Scripts.Render("~/Scripts/Angular/Step02.spec.js")

    <script type="text/javascript">
        (function () {
            var jasmineEnv = jasmine.getEnv();
            jasmineEnv.updateInterval = 1000;
            var htmlReporter = new jasmine.HtmlReporter();
            jasmineEnv.addReporter(htmlReporter);
            jasmineEnv.specFilter = function (spec) {
                return htmlReporter.specFilter(spec);
            };
            var currentWindowOnload = window.onload;
            window.onload = function () {
                if (currentWindowOnload) {
                    currentWindowOnload();
                }
                execJasmine();
            };
            function execJasmine() {
                jasmineEnv.execute();
            }

        })();
    </script>
}
